# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'cricket.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from CricketScore1 import Ui_Dialog

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(955, 680)
        MainWindow.setStyleSheet("background-color: rgb(106, 213, 0);\n"
"border-color: rgb(85, 0, 0);\n"
"alternate-background-color: rgb(0, 170, 127);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(40, 170, 47, 13))
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(40, 190, 761, 41))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_4 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("QLabel{\n"
"\n"
"color:red\n"
"\n"
"}")
        self.label_4.setObjectName("label_4")
        self.horizontalLayout.addWidget(self.label_4)
        self.t5 = QtWidgets.QLineEdit(self.horizontalLayoutWidget_2)
        self.t5.setStyleSheet("background-color: rgb(170, 85, 255);")
        self.t5.setObjectName("t5")
        self.horizontalLayout.addWidget(self.t5)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.label_3 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("QLabel{\n"
"\n"
"color:red\n"
"}")
        self.label_3.setObjectName("label_3")
        self.horizontalLayout.addWidget(self.label_3)
        self.t6 = QtWidgets.QLineEdit(self.horizontalLayoutWidget_2)
        self.t6.setStyleSheet("background-color: rgb(170, 85, 255);")
        self.t6.setObjectName("t6")
        self.horizontalLayout.addWidget(self.t6)
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(30, 60, 801, 81))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_5 = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(18)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("QLabel{\n"
"    \n"
"    ;\n"
"    background-color: rgb(139, 208, 208);\n"
"}")
        self.label_5.setObjectName("label_5")
        self.verticalLayout.addWidget(self.label_5)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem2)
        self.label_9 = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("color: rgb(85, 0, 0);")
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_5.addWidget(self.label_9)
        self.t1 = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.t1.setObjectName("t1")
        self.horizontalLayout_5.addWidget(self.t1)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem3)
        self.label_8 = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("color: rgb(85, 0, 0);")
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_5.addWidget(self.label_8)
        self.t2 = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.t2.setObjectName("t2")
        self.horizontalLayout_5.addWidget(self.t2)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem4)
        self.label_7 = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("color: rgb(85, 0, 0);")
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_5.addWidget(self.label_7)
        self.t3 = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.t3.setObjectName("t3")
        self.horizontalLayout_5.addWidget(self.t3)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem5)
        self.label_6 = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("color: rgb(85, 0, 0);")
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_5.addWidget(self.label_6)
        self.t4 = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.t4.setObjectName("t4")
        self.horizontalLayout_5.addWidget(self.t4)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem6)
        self.verticalLayout.addLayout(self.horizontalLayout_5)
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(20, 240, 891, 341))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem7)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.label_10 = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setStyleSheet("QLabel{\n"
"color: rgb(37, 20, 74);\n"
"}")
        self.label_10.setObjectName("label_10")
        self.verticalLayout_8.addWidget(self.label_10, 0, QtCore.Qt.AlignHCenter)
        self.groupBox = QtWidgets.QGroupBox(self.layoutWidget)
        self.groupBox.setStyleSheet("background-color: rgb(105, 212, 157);")
        self.groupBox.setTitle("")
        self.groupBox.setFlat(False)
        self.groupBox.setCheckable(False)
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.rb1 = QtWidgets.QRadioButton(self.groupBox)
        self.rb1.setObjectName("rb1")
        self.horizontalLayout_4.addWidget(self.rb1)
        self.rb2 = QtWidgets.QRadioButton(self.groupBox)
        self.rb2.setObjectName("rb2")
        self.horizontalLayout_4.addWidget(self.rb2)
        self.rb3 = QtWidgets.QRadioButton(self.groupBox)
        self.rb3.setObjectName("rb3")
        self.horizontalLayout_4.addWidget(self.rb3)
        self.rb4 = QtWidgets.QRadioButton(self.groupBox)
        self.rb4.setObjectName("rb4")
        self.horizontalLayout_4.addWidget(self.rb4)
        self.verticalLayout_8.addWidget(self.groupBox)
        self.list1 = QtWidgets.QListWidget(self.layoutWidget)
        self.list1.setAutoFillBackground(True)
        self.list1.setStyleSheet("QListWidget{\n"
"background-color: rgb(197, 197, 197);\n"
"}")
        self.list1.setAutoScroll(True)
        self.list1.setObjectName("list1")
        self.verticalLayout_8.addWidget(self.list1)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout_8.addItem(spacerItem8)
        self.horizontalLayout_3.addLayout(self.verticalLayout_8)
        self.label_17 = QtWidgets.QLabel(self.layoutWidget)
        self.label_17.setText("")
        self.label_17.setPixmap(QtGui.QPixmap("Players/Cricketlogo.png"))
        self.label_17.setObjectName("label_17")
        self.horizontalLayout_3.addWidget(self.label_17)
        self.label_14 = QtWidgets.QLabel(self.layoutWidget)
        self.label_14.setMaximumSize(QtCore.QSize(313, 379))
        self.label_14.setText("")
        self.label_14.setPixmap(QtGui.QPixmap("../../Users/Raaj/Downloads/Cricketlogo.png"))
        self.label_14.setAlignment(QtCore.Qt.AlignCenter)
        self.label_14.setObjectName("label_14")
        self.horizontalLayout_3.addWidget(self.label_14)
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.label_12 = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("QLabel{\n"
"color: rgb(37, 20, 74);\n"
"}")
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setObjectName("label_12")
        self.verticalLayout_9.addWidget(self.label_12)
        self.line_2 = QtWidgets.QFrame(self.layoutWidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout_9.addWidget(self.line_2)
        spacerItem9 = QtWidgets.QSpacerItem(20, 3, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout_9.addItem(spacerItem9)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_9.addLayout(self.horizontalLayout_2)
        self.label_11 = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_11.setFont(font)
        self.label_11.setStyleSheet("background-color: rgb(108, 218, 162);")
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setObjectName("label_11")
        self.verticalLayout_9.addWidget(self.label_11)
        self.t7 = QtWidgets.QLineEdit(self.layoutWidget)
        self.t7.setStyleSheet("background-color: rgb(112, 225, 167);")
        self.t7.setObjectName("t7")
        self.verticalLayout_9.addWidget(self.t7)
        self.list2 = QtWidgets.QListWidget(self.layoutWidget)
        self.list2.setStyleSheet("QListWidget{\n"
"background-color: rgb(197, 197, 197);\n"
"}")
        self.list2.setMovement(QtWidgets.QListView.Static)
        self.list2.setResizeMode(QtWidgets.QListView.Fixed)
        self.list2.setObjectName("list2")
        self.verticalLayout_9.addWidget(self.list2)
        self.label_13 = QtWidgets.QLabel(self.layoutWidget)
        self.label_13.setText("")
        self.label_13.setPixmap(QtGui.QPixmap("D:/dreamteam_v3_Aamir/dream1.png"))
        self.label_13.setObjectName("label_13")
        self.verticalLayout_9.addWidget(self.label_13)
        self.horizontalLayout_3.addLayout(self.verticalLayout_9)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem10)
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(40, 150, 321, 31))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_15 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Narkisim")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.horizontalLayout_6.addWidget(self.label_15)
        self.comboBox = QtWidgets.QComboBox(self.horizontalLayoutWidget)
        self.comboBox.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"background-color: rgb(225, 213, 72);")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.horizontalLayout_6.addWidget(self.comboBox)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(390, 600, 161, 23))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(255, 170, 127);\n"
"background-color: rgb(255, 170, 255);")
        self.pushButton.setObjectName("pushButton")
        self.label_16 = QtWidgets.QLabel(self.centralwidget)
        self.label_16.setGeometry(QtCore.QRect(50, 0, 811, 51))
        font = QtGui.QFont()
        font.setFamily("Snap ITC")
        font.setPointSize(24)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.label_16.setFont(font)
        self.label_16.setStyleSheet("color: rgb(55, 0, 83);")
        self.label_16.setObjectName("label_16")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 955, 21))
        self.menubar.setObjectName("menubar")
        self.menuManage_Teams = QtWidgets.QMenu(self.menubar)
        self.menuManage_Teams.setObjectName("menuManage_Teams")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNEW_Team = QtWidgets.QAction(MainWindow)
        self.actionNEW_Team.setIconVisibleInMenu(False)
        self.actionNEW_Team.setShortcutVisibleInContextMenu(True)
        self.actionNEW_Team.setObjectName("actionNEW_Team")
        self.actionOPEN_Team = QtWidgets.QAction(MainWindow)
        self.actionOPEN_Team.setObjectName("actionOPEN_Team")
        self.actionSave_Team = QtWidgets.QAction(MainWindow)
        self.actionSave_Team.setObjectName("actionSave_Team")
        self.actionEVALUATE_Team = QtWidgets.QAction(MainWindow)
        self.actionEVALUATE_Team.setObjectName("actionEVALUATE_Team")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionNew_Team = QtWidgets.QAction(MainWindow)
        self.actionNew_Team.setObjectName("actionNew_Team")
        self.actionOpen_Team = QtWidgets.QAction(MainWindow)
        self.actionOpen_Team.setObjectName("actionOpen_Team")
        self.actionSave_Team_2 = QtWidgets.QAction(MainWindow)
        self.actionSave_Team_2.setObjectName("actionSave_Team_2")
        self.actionEvaluate_Team = QtWidgets.QAction(MainWindow)
        self.actionEvaluate_Team.setObjectName("actionEvaluate_Team")
        self.menuManage_Teams.addAction(self.actionNew_Team)
        self.menuManage_Teams.addAction(self.actionOpen_Team)
        self.menuManage_Teams.addAction(self.actionSave_Team_2)
        self.menuManage_Teams.addAction(self.actionEvaluate_Team)
        self.menubar.addAction(self.menuManage_Teams.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.rb1.setEnabled(False)  #All radio buttons are disabled in the beginning until
        self.rb2.setEnabled(False)  #new team menu option is selected
        self.rb3.setEnabled(False)
        self.rb4.setEnabled(False)

        self.rb1.clicked.connect(self.show_names)
        self.rb2.clicked.connect(self.show_names)
        self.rb3.clicked.connect(self.show_names)
        self.rb4.clicked.connect(self.show_names)
        self.menuManage_Teams.triggered[QtWidgets.QAction].connect(self.menu_function)
        self.comboBox.activated[str].connect(self.about_Player)

        self.list1.itemDoubleClicked.connect(self.add_players)
        self.list2.itemDoubleClicked.connect(self.rmv_players)

        self.pushButton.clicked.connect(self.exit_game)

        self.bat = 0
        self.bowl = 0
        self.allrndr = 0
        self.wcktkpr = 0
        self.avlpts = 1000
        self.used_pts = 0
        self.tot_players = 0

    ##select item in combobox to see details of Players 
    def about_Player(self):
        t=self.comboBox.currentText()
        if t=="Jasprit Bumrah":
            from Bumrah import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t=="Axar Patel":
            from Axar import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t=="Ravichandran Ashwin":
            from Ashwin import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t=="M.S. Dhoni":
            from msdhoni import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t=="Ravindra Jadeja":
            from jadeja import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t=="Ainkya Rahane":
            from Rahane import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t=="Bhuwaneshwar Kumar":
            from Bhuwaneshwar import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t=="Virat Kohli":
            from Kohli import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t=="Rohit Sharma":
            from Rohit import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t=="Kedar Jadav":
            from Kedar import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t=="Umesh Yadav":
            from Umesh import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t=="Yuvraj Singh":
            from Yuvraj import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t=="Shikhar Dhawan":
            from Shikhar import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t==" Kartik Tyagi":
            from Kartik import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()
        if t=="Hardik Pandya":
            from Hardik import Ui_Dialog
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()

    ##Menu Functions
    def menu_function(self,action):
        txt=(action.text())
        if txt=="Evaluate Score":
            Dialog=QtWidgets.QDialog()
            dlg=Ui_Dialog()
            dlg.setupUi(Dialog)
            retn=Dialog.exec()

        ##If we choose New Team from Menu Functionality Then New team wiil be created
        if txt=="New Team":    
            self.bat,self.bowl,self.allrndr,self.wcktkpr=0,0,0,0
            self.avlpts=1000
            self.used_pts=0
            self.list1.clear()
            self.list2.clear()
            sql="SELECT Name FROM teams;"
            try:
                import sqlite3
                Mycrkt=sqlite3.connect("CricketGame.db")
                Mycur=Mycrkt.cursor()
                Mycur.execute(sql)
                result=Mycur.fetchall()
                nm,ok=QtWidgets.QInputDialog.getText(MainWindow,"Team","Enter name of team:") #Dialog to enter teamName
                teamName=(nm)
                if ok and nm=="":
                    self.showdialog("Teamname can't be empty!!!")  #Popup if teamName column is left empty and ok is pressed
                elif teamName in result:
                    self.showdialog("Team with this name already exists!!!")  #Popup if the teamName already exists
                elif ok and nm!="":
                    self.t7.setText(str(nm))
                    self.rb1.setEnabled(True)
                    self.rb2.setEnabled(True)
                    self.rb3.setEnabled(True)
                    self.rb4.setEnabled(True)
                    self.bat,self.bowl,self.allrndr,self.wcktkpr=0,0,0,0
                    self.avlpts=1000
                    self.used_pts=0
                    self.list1.clear()
                    self.list2.clear()

                self.display_details()

            except:
                pass

        if txt=="Open Team":
            self.bat,self.bowl,self.allrndr,self.wcktkpr=0,0,0,0
            self.avlpts=1000
            self.used_pts=0
            self.list1.clear()
            self.list2.clear()
            self.display_details()
            self.To_open_team()


        if txt=="Save Team":
            import sqlite3
            Mycrkt=sqlite3.connect("CricketGame.db")
            Mycur=Mycrkt.cursor()
            if self.tot_players<11:
                self.showdialog("The team must consist of 11 players")  
            else:
                sql="SELECT Name FROM teams;"
                try:
                    Mycur.execute(sql)
                    result=Mycur.fetchall()
                    teamName=(self.t7.text(),)  
                    if teamName in result:        
                        try:
                            sql1="DELETE FROM teams WHERE Name='"+self.t7.text()+"';"  
                            Mycur.execute(sql1)
                            Mycrkt.commit()
                        except:
                            Mycrkt.rollback()

                    players =[]
                    for i in range(self.list2.count()):
                        players.append(self.list2.item(i).text())
                    my_players = ",".join(players)
                    try:
                        Mycur.execute("INSERT INTO teams(Name,Players,Value) VALUES(?,?,?);",(self.t7.text(),my_players,self.used_pts))
                        Mycrkt.commit()
                        self.showdialog("Team Saved")
                        
                    except:
                        self.showdialog("Some Error occurred")
                        Mycrkt.rollback()
                except:
                    pass

    def To_open_team(self):
        sql="SELECT Name FROM teams"
        import sqlite3
        Mycrkt=sqlite3.connect("CricketGame.db")
        Mycur=Mycrkt.cursor()
        try:
            Mycur.execute(sql)
            result = Mycur.fetchall()
            teamnames = []
                
            for i in result:
                teamnames.append(i[0])
            item,ok = QtWidgets.QInputDialog.getItem(MainWindow, "OpenTeam", "Select any team to open",teamnames,0,False)                   #Dialog with teamNames is displayed
                            
            if ok and item:
                self.t7.setText(item)
                self.list1.clear()
                self.list2.clear()
                self.bat=0
                self.bowl=0
                self.allrndr=0
                self.wcktkpr=0
                self.tot_players=11

                self.rb1.setEnabled(True) #If the user selects OPEN Team menu in the starting,
                self.rb2.setEnabled(True) #then all radio buttons are enabled
                self.rb3.setEnabled(True)
                self.rb4.setEnabled(True)
                
                sql1="SELECT Players,Value FROM teams WHERE Name='"+item+"';"    
                Mycur.execute(sql1)
                result = Mycur.fetchone()
                players = result[0].split(",")
                for i in players:
                    sql2="SELECT ctg FROM stats WHERE Player='"+i+"';"
                    try:
                        Mycur.execute(sql2)
                        category = Mycur.fetchone()
                        if category[0]=="BAT":self.bat+=1
                        if category[0]=="BOW":self.bowl+=1
                        if category[0]=="AR":self.allrndr+=1
                        if category[0]=="WK":self.wcktkpr+=1    #Players of the selected team are displayed along with all counts
                        self.list2.addItem(i)        #and points
                    except:                                
                        pass
                self.used_pts=int(result[1])
                self.avlpts=1000-self.used_pts
            self.display_details()
        except:
            pass

    def show_names(self):
        import sqlite3
        Mycrkt=sqlite3.connect("CricketGame.db")
        Mycur=Mycrkt.cursor()
        if self.rb1.isChecked():
            self.list1.clear()
            Mycur.execute('SELECT Player FROM stats WHERE ctg= "BAT"')
            bats_data = Mycur.fetchall()

            for data in bats_data:
                self.list1.addItem(data[0])
        if self.rb2.isChecked():
            self.list1.clear()
            Mycur.execute('SELECT Player fROM stats WHERE ctg= "BOW"')
            bowl_data = Mycur.fetchall()
            for data in bowl_data:
                self.list1.addItem(data[0])
        if self.rb3.isChecked():
            self.list1.clear()
            Mycur.execute('SELECT Player FROM stats WHERE ctg= "AR"')
            all_data = Mycur.fetchall()
            for data in all_data:
                self.list1.addItem(data[0])
        if self.rb4.isChecked():
            self.list1.clear()
            Mycur.execute('SELECT Player FROM stats WHERE ctg="WK"')
            WK_data = Mycur.fetchall()
            for data in WK_data:
                self.list1.addItem(data[0])

    def category(self):
        self.ctg=''
        if self.rb1.isChecked()==True:
            ctg='BAT'
        if self.rb2.isChecked()==True:
            ctg='BOW'
        if self.rb3.isChecked()==True:
            ctg='AR'
        if self.rb4.isChecked()==True:
            ctg='WK'
       	
        self.players_list(ctg)

    def players_list(self,ctg):
        import sqlite3
        Mycrkt=sqlite3.connect("CricketGame.db")
        Mycur=Mycrkt.cursor()
        self.list1.clear()
        Mycur = Mycrkt.execute("SELECT Player from stats where ctg='"+ctg+"'")
        try:
            Mycur.execute(sql)
            record = Mycur.fetchall()
            selected_players = []
            for i in range(self.list2.count()):    
                selected_players.append(self.list2.item(i).text())  
            for rec in record:
                if rec[0] not in selected_players:  #If the player is not selected then displayed in 
                    self.list1.addItem(rec[0]) #available players list
        except:
            pass

    def add_players(self,item):
        self.res = self.dis_mssg(item.text())
        if self.res==1:
            self.list1.takeItem(self.list1.row(item))
            self.list2.addItem(item.text())
            sql = "SELECT ctg,Value FROM stats WHERE Player='"+item.text()+"';"
            try:
                import sqlite3
                Mycrkt=sqlite3.connect("CricketGame.db")
                Mycur=Mycrkt.cursor()
                Mycur.execute(sql)
                ctg_value = Mycur.fetchone()
                if ctg_value[0]=="BAT":
                    self.bat+=1
                if ctg_value[0]=="BOW":
                    self.bowl+=1
                if ctg_value[0]=="AR":
                    self.allrndr+=1
                if ctg_value[0]=="WK":
                    self.wcktkpr+=1
                self.tot_players+=1
                self.avlpts-=int(ctg_value[1])
                self.used_pts+=int(ctg_value[1])
                self.display_details()
                if self.tot_players==10 and self.wcktkpr==0:  #Reminder for the user to add one wicketkeeper in the team if not added
                    self.showdialog("You should add one wicketkeeper to your team")
            except:
                pass

        else:
            pass

    def rmv_players(self,item):
        self.list2.takeItem(self.list2.row(item))
        sql = "SELECT ctg,Value FROM stats WHERE Player='"+item.text()+"';"
        try:
            import sqlite3
            Mycrkt=sqlite3.connect("CricketGame.db")
            Mycur=Mycrkt.cursor()
            Mycur.execute(sql)
            ctg_value = Mycur.fetchone()
            if ctg_value[0]=="BAT":
                self.bat-=1
            if ctg_value[0]=="BOW":
                self.bowl-=1
            if ctg_value[0]=="AR":
                self.allrndr-=1
            if ctg_value[0]=="WK":
                self.wcktkpr-=1
            self.tot_players-=1
            self.used_pts-=int(ctg_value[1])
            self.avlpts+=int(ctg_value[1])
        except:
            pass

        if self.rb1.isChecked()==True and ctg_value[0]=="BAT":
            self.list1.addItem(item.text())
        elif self.rb2.isChecked()==True and ctg_value[0]=="BOW":
            self.list1.addItem(item.text())
        elif self.rb3.isChecked()==True and ctg_value[0]=="AR":
            self.list1.addItem(item.text())
        elif self.rb4.isChecked()==True and ctg_value[0]=="WK":
            self.list1.addItem(item.text())

        self.display_details()

    
    def display_details(self):
        self.t1.setText(str(self.bat))
        self.t2.setText(str(self.bowl))
        self.t3.setText(str(self.allrndr))
        self.t4.setText(str(self.wcktkpr))
        self.t5.setText(str(self.avlpts))
        self.t6.setText(str(self.used_pts))

    def showdialog(self,msg):
        Dialog = QtWidgets.QMessageBox()
        Dialog.setText(msg)
        Dialog.setWindowTitle('Message')
        ret=Dialog.exec()

        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_4.setText(_translate("MainWindow", "Points Available"))
        self.label_3.setText(_translate("MainWindow", "Points Used"))
        self.label_5.setText(_translate("MainWindow", "Your Selections"))
        self.label_9.setText(_translate("MainWindow", "Batsmen (BAT)"))
        self.label_8.setText(_translate("MainWindow", "Bowlers (BOW)"))
        self.label_7.setText(_translate("MainWindow", "Allrounders (AR)"))
        self.label_6.setText(_translate("MainWindow", "Wicket-keeper (WC)"))
        self.label_10.setText(_translate("MainWindow", "Players"))
        self.rb1.setText(_translate("MainWindow", "BAT"))
        self.rb2.setText(_translate("MainWindow", "BOW"))
        self.rb3.setText(_translate("MainWindow", "AR"))
        self.rb4.setText(_translate("MainWindow", "WK"))
        self.label_12.setText(_translate("MainWindow", "Selected Players"))
        self.label_11.setText(_translate("MainWindow", "Team Name"))
        self.label_15.setText(_translate("MainWindow", "Total Available Players"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Virat Kohli"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Shikhar Dhawan"))
        self.comboBox.setItemText(2, _translate("MainWindow", "Ainkya Rahane"))
        self.comboBox.setItemText(3, _translate("MainWindow", "Yuvraj Singh"))
        self.comboBox.setItemText(4, _translate("MainWindow", "Bhuwaneshwar Kumar"))
        self.comboBox.setItemText(5, _translate("MainWindow", "Umesh Yadav"))
        self.comboBox.setItemText(6, _translate("MainWindow", "Kedar Jadav"))
        self.comboBox.setItemText(7, _translate("MainWindow", "Hardik Pandya"))
        self.comboBox.setItemText(8, _translate("MainWindow", "M.S. Dhoni"))
        self.comboBox.setItemText(9, _translate("MainWindow", "Ravindra Jadeja"))
        self.comboBox.setItemText(10, _translate("MainWindow", "Ravichandran Ashwin"))
        self.comboBox.setItemText(11, _translate("MainWindow", "Axar Patel"))
        self.comboBox.setItemText(12, _translate("MainWindow", "Jasprit Bumrah"))
        self.comboBox.setItemText(13, _translate("MainWindow", "Rohit Sharma"))
        self.comboBox.setItemText(14, _translate("MainWindow", " Kartik Tyagi"))
        self.pushButton.setText(_translate("MainWindow", "Quit Game"))
        self.label_16.setText(_translate("MainWindow", "**Welcome To The Cricket Fantasy Game**"))
        self.menuManage_Teams.setTitle(_translate("MainWindow", "Manage Teams"))
        self.actionNEW_Team.setText(_translate("MainWindow", "NEW Team"))
        self.actionNEW_Team.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionOPEN_Team.setText(_translate("MainWindow", "OPEN Team"))
        self.actionOPEN_Team.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_Team.setText(_translate("MainWindow", "SAVE Team"))
        self.actionEVALUATE_Team.setText(_translate("MainWindow", "EVALUATE Team"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionNew_Team.setText(_translate("MainWindow", "New Team"))
        self.actionNew_Team.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionOpen_Team.setText(_translate("MainWindow", "Open Team"))
        self.actionOpen_Team.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave_Team_2.setText(_translate("MainWindow", "Save Team"))
        self.actionSave_Team_2.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionEvaluate_Team.setText(_translate("MainWindow", "Evaluate Score"))
        self.actionEvaluate_Team.setShortcut(_translate("MainWindow", "Ctrl+E"))

    def dis_mssg(self,text):
        self.flag=1
        self.ctg = ''
        if self.rb1.isChecked()==True:
            ctg = 'BAT'
        elif self.rb2.isChecked()==True:
            ctg = 'BOW'
        elif self.rb3.isChecked()==True:
            ctg = 'AR'
        elif self.rb4.isChecked()==True:
            ctg = 'WK'
        if self.tot_players>=11:
            self.flag=0
            self.showdialog("Can't select more than 11 players")
        if self.bat>=5 and ctg=="BAT":
            self.flag=0
            self.showdialog("There can't be more than 5 batsmen")
        if self.bowl>=5 and ctg=="BWL":
            self.flag=0
            self.showdialog("There can't be more than 5 bowlers")
        if self.wcktkpr>=1 and ctg=="WK":
            self.flag=0
            self.showdialog("There can't be more than 1 wicketkeeper")
        if self.allrndr>=3 and ctg=="AR":
            self.flag=0
            self.showdialog("There can't be more than 3 alrounder")

        sql = "SELECT Value FROM stats WHERE Player='"+text+"';"
        try:
            import sqlite3
            Mycrkt=sqlite3.connect("CricketGame.db")
            Mycur=Mycrkt.cursor()
            Mycur.execute(sql)
            rec = Mycur.fetchone()
            if self.avlpts-int(rec[0])<=0 and self.tot_players!=11:    #If the points left is less than the value of player selected
                self.flag=0                                            #Popup displayed
                self.showdialog("Insufficient points...Kindly change your selected players to continue selecting")
        except:
            pass
        return self.flag

    def exit_game(self):
        self.showdialog('Thank you for playing game...Hope You Enjoyed!!')
        sys.exit()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
